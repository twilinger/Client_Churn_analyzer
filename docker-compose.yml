version: '3.8'

services:
  # Main application
  hotel-ai-app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - VECTOR_DB_PATH=/app/data/rag_db
      - APP_TITLE=Hotel AI Suite
      - APP_VERSION=1.0.0
    volumes:
      - ./data:/app/data
      - ./knowledge:/app/knowledge
    depends_on:
      - ollama
      - redis
    networks:
      - hotel-ai-network
    restart: unless-stopped

  # Ollama LLM service
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    networks:
      - hotel-ai-network
    restart: unless-stopped
    # Uncomment to automatically pull models
    # command: >
    #   sh -c "ollama pull llama3 && ollama serve"

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hotel-ai-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # PostgreSQL database (optional)
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=hotel_ai
      - POSTGRES_USER=hotel_user
      - POSTGRES_PASSWORD=hotel_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/create_table.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - hotel-ai-network
    restart: unless-stopped

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - hotel-ai-app
    networks:
      - hotel-ai-network
    restart: unless-stopped

volumes:
  ollama_data:
  redis_data:
  postgres_data:

networks:
  hotel-ai-network:
    driver: bridge
